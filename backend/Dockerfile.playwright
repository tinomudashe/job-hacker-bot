# Use Microsoft's official Playwright container as base
FROM mcr.microsoft.com/playwright:v1.52.0-noble

# Set working directory
WORKDIR /app

# Install Python and additional system dependencies
RUN apt-get update && apt-get install -y \
    python3 \
    python3-pip \
    python3-venv \
    curl \
    wget \
    git \
    && rm -rf /var/lib/apt/lists/*

# Create and activate virtual environment
RUN python3 -m venv /opt/venv
ENV PATH="/opt/venv/bin:$PATH"

# Copy requirements first for better caching
COPY requirements.txt .

# Install Python dependencies with exact versions for compatibility
RUN pip install --no-cache-dir --upgrade pip && \
    pip install --no-cache-dir -r requirements.txt

# Copy application code
COPY . .

# Run comprehensive compatibility check
RUN python3 app/browser_compatibility.py || echo "Compatibility check completed with warnings"

# Ensure Playwright browsers are properly installed and accessible
# The container already has browsers, but we need to verify Python can access them
RUN python3 -c "from playwright.sync_api import sync_playwright; print('✅ Playwright browsers verified')"

# Verify Playwright is working properly
RUN python3 -c "import playwright; print('✅ Playwright ready for browser automation')"

# Set environment variables
ENV PYTHONPATH=/app
ENV PYTHONUNBUFFERED=1

# Expose the port
EXPOSE 8000

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=5s --retries=3 \
    CMD curl -f http://localhost:8000/health || exit 1

# Run the application
CMD ["python", "-m", "uvicorn", "app.main:app", "--host", "0.0.0.0", "--port", "8000"] 